package user.zchp.service;import org.springframework.scheduling.annotation.Async;import user.zchp.dao.TableInfoDao;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import user.zchp.general.Machine;import user.zchp.general.component.LeftTable;import user.zchp.general.component.Table;import user.zchp.general.pipeline.FileExport;import user.zchp.general.process.DemoTableProcess;import user.zchp.general.utils.GeneralMessage;import user.zchp.models.TableInfo;import user.zchp.utils.QueryParam;import javax.management.Query;import java.util.List;@Servicepublic class TableInfoService extends AbstractService {	@Autowired    private TableInfoDao tableInfoDao;	public TableInfoService() {		super();	}	@Override	public TableInfoDao getDao() {		return this.tableInfoDao;	}	@Async	public GeneralMessage generalHandler(LeftTable leftTable){		GeneralMessage generalMessage = Machine.create(new DemoTableProcess(leftTable))				.addPiplineList(new FileExport())				.run();		try{			for(Table table  :generalMessage.getTableList()){				String name = table.getTableName();				QueryParam queryParam  = new QueryParam("name",name);				TableInfo tableInfo  =  this.one(queryParam);				if(tableInfo==null){					tableInfo = new TableInfo();					tableInfo.setName(name);				}				tableInfo.setStatus(table.getStatus());				this.persistence(tableInfo);			}		}catch (Exception e){			e.printStackTrace();		}		return generalMessage;	}	public Boolean exist(List<TableInfo> list , String name){		for(TableInfo tableInfo : list){			if(tableInfo.getName().equals(name)){				return tableInfo.getStatus();			}		}		return false;	}}